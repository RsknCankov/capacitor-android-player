{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAQ5C,MAAM,OAAO,yBACX,SAAQ,SAAS;IAGjB,UAAU;QACR,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6DAA6D;IAC7D,aAAa;IACb,UAAU,CAAC,OAA8B;QACvC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6DAA6D;IAC7D,aAAa;IACb,WAAW,CAAC,OAAwB;QAClC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  CapacitorAndroidPlayerPlugin,\n  capVideoPlayerOptions,\n  capVideoPlayerResult,\n} from './definitions';\n\nexport class CapacitorAndroidPlayerWeb\n  extends WebPlugin\n  implements CapacitorAndroidPlayerPlugin\n{\n  playerStop(): Promise<capVideoPlayerResult> {\n    return new Promise(resolve => {\n      resolve({ result: true });\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  initPlayer(options: capVideoPlayerOptions): Promise<capVideoPlayerResult> {\n    return new Promise(resolve => {\n      resolve({ result: true });\n    });\n  }\n\n  isPlaying(): Promise<capVideoPlayerResult> {\n    return new Promise(resolve => {\n      resolve({ result: true });\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  setVideoUrl(options: { url: string }): Promise<capVideoPlayerResult> {\n    return new Promise(resolve => {\n      resolve({ result: true });\n    });\n  }\n\n  playerPause(): Promise<capVideoPlayerResult> {\n    return new Promise(resolve => {\n      resolve({ result: true });\n    });\n  }\n\n  exitPlayer(): Promise<capVideoPlayerResult> {\n    return new Promise(resolve => {\n      resolve({ result: true });\n    });\n  }\n}\n"]}